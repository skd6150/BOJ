그리디, 유니온파인드

비행기가 도착했을 때 가급적이면 높은 수의 게이트에 도킹해야 함.
i번째 비행기가 도착했을 때 0~gi중 이미 도킹되지 않은 게이트 중 가장 숫자가 큰 게이트에 도킹해야 함.

이때 비행기와 게이트의 수가 모두 최대 100000이라 n^2로는 시간초과이므로 유니온파인드로 조금 더 효율적으로 풀어야 함

i번째 비행기가 도착해서 n번째 게이트에 정착했을 때, 다음 n번째 게이트에 도킹을 시도하려는 비행기는 n-1에 도킹해야 함
따라서 n번째 게이트에 정착했을 때 n과 n-1을 union함

i번째 비행기가 도착할 게이트는 find로 찾을 수 있고 경로압축으로 최적화 가능
만약 find의 결과값이 0인 경우 가장 낮은 번호의 게이트인 1번 게이트 마저 이미 도킹되어 있다는 의미이므로 공항폐쇄